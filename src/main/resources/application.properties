spring.application.name=event-manager
server.port=${SERVER_PORT:8080}

spring.datasource.url = ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/event_manager}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:event-manager-admin}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

spring.jpa.properties.javax.persistence.validation.mode=callback

spring.liquibase.enabled=true
spring.liquibase.drop-first=false
spring.liquibase.change-log=classpath:db/db.changelog-master.xml
spring.liquibase.default-schema=public

logging.level.root=${LOG_LEVEL:INFO}

spring.security.oauth2.resourceserver.jwt.issuer-uri= ${KEYCLOAK_URL:http://217.198.13.249:30100}/realms/geogreen
spring.security.oauth2.resourceserver.jwt.jwk-set-uri= ${KEYCLOAK_URL:http://217.198.13.249:30100}/realms/geogreen/protocol/openid-connect/certs

user.service.host=${USER_SERVICE_HOST:http://217.198.13.249:30100}

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:http://localhost:29092}

kafka.update.topic=${KAFKA_UPDATE_TOPIC:update-element}

geospatial.server.host=${GEOSPATIAL_SERVER_HOST:http://217.198.13.249:30100}

spring.cloud.openfeign.httpclient.hc5.enabled=true
logging.level.feign=DEBUG
logging.level.feign.httpclient=DEBUG